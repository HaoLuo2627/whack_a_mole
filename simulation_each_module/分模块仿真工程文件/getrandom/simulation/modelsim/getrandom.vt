// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "12/26/2018 15:16:17"
                                                                                
// Verilog Test Bench template for design : getrandom
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ps/ 1 ps
module getrandom_vlg_tst();
// constants                                           
// general purpose registers

// test vector input registers
reg clk;
reg rst;
// wires                                               
wire [2:0]  rowran;
wire [2:0]  colran;

// assign statements (if any)                          
getrandom i1 (
// port map - connection between master ports and signals/registers   
	.clk(clk),
	.ran1(rowran),
	.ran2(colran),
	.rst(rst)
);
initial                                                
begin                                                  
	clk=1;
	rst=1;
	#50 rst=0;
$display("Running testbench"); 
#4000 $stop;                      
end                                                    
always clk=#50 ~clk;                //50 time units equal 1 second                                                                     
endmodule

